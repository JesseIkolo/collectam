const mongoose = require('mongoose');
const WasteRequest = require('../models/WasteRequest');
require('dotenv').config();

async function fixCompletedCollections() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // Trouver toutes les demandes termin√©es
    const completedRequests = await WasteRequest.find({ 
      status: 'completed' 
    });

    console.log(`üìã ${completedRequests.length} demande(s) termin√©e(s) trouv√©e(s)`);

    let fixedCount = 0;

    for (const request of completedRequests) {
      console.log(`\nüîç Demande ${request._id}:`);
      console.log(`  - Type: ${request.wasteType}`);
      console.log(`  - Poids estim√©: ${request.estimatedWeight}kg`);
      console.log(`  - D√©tails collecte:`, request.collectionDetails);

      // Si pas de collectionDetails ou pas de actualWeight
      if (!request.collectionDetails || !request.collectionDetails.actualWeight) {
        console.log('  ‚ö†Ô∏è Pas de poids r√©el enregistr√©, correction...');
        
        // Utiliser le poids estim√© comme poids r√©el
        request.collectionDetails = {
          actualWeight: request.estimatedWeight,
          collectedBy: request.assignedCollector,
          photos: request.collectionDetails?.photos || []
        };

        await request.save();
        console.log(`  ‚úÖ Poids corrig√©: ${request.estimatedWeight}kg`);
        fixedCount++;
      } else {
        console.log(`  ‚úÖ Poids d√©j√† enregistr√©: ${request.collectionDetails.actualWeight}kg`);
      }
    }

    console.log(`\nüìä R√©sum√©:`);
    console.log(`  - Total demandes termin√©es: ${completedRequests.length}`);
    console.log(`  - Demandes corrig√©es: ${fixedCount}`);
    console.log(`  - Demandes d√©j√† correctes: ${completedRequests.length - fixedCount}`);

    // Calculer le poids total
    const totalWeight = completedRequests.reduce((sum, req) => {
      const weight = req.collectionDetails?.actualWeight || req.estimatedWeight;
      return sum + weight;
    }, 0);

    console.log(`  - Poids total collect√©: ${totalWeight.toFixed(2)}kg`);

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le script
fixCompletedCollections();
