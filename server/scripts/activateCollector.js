const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

async function activateCollector() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // Trouver tous les collecteurs
    const collectors = await User.find({ userType: 'collecteur' });
    console.log(`üë• ${collectors.length} collecteur(s) trouv√©(s)`);

    if (collectors.length === 0) {
      console.log('‚ùå Aucun collecteur trouv√©. Inscrivez-vous d\'abord en tant que collecteur.');
      return;
    }

    // Activer le premier collecteur avec g√©olocalisation (Douala, Cameroun)
    const collector = collectors[0];
    
    const updateData = {
      onDuty: true,
      lastLocation: {
        type: 'Point',
        coordinates: [9.7043, 4.0511] // Douala, Cameroun [longitude, latitude]
      },
      lastSeenAt: new Date()
    };

    await User.findByIdAndUpdate(collector._id, updateData);
    
    console.log(`‚úÖ Collecteur activ√©: ${collector.firstName} ${collector.lastName}`);
    console.log(`üìç Position d√©finie: Douala (${updateData.lastLocation.coordinates})`);
    console.log(`üü¢ Status: onDuty = true`);
    
    // V√©rification
    const updatedCollector = await User.findById(collector._id);
    console.log('\nüìã V√©rification:');
    console.log(`- onDuty: ${updatedCollector.onDuty}`);
    console.log(`- lastLocation: ${JSON.stringify(updatedCollector.lastLocation)}`);
    
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le script
activateCollector();
